services:
  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_DIRS: "/tmp/kafka-logs"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      zookeeper:
        condition: service_started
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "kafka:9092"]
      interval: 5s
      timeout: 5s
      retries: 5
    logging:
      driver: none
  zookeeper: 
    image: zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181"
    logging:
      driver: none
  node-exporter-1:
    image: mariovicente/router-node-exporter:latest
    hostname: node-exporter-1
    container_name: node-exporter-1
    ports:
      - "9100:9100"
    depends_on:
      - prometheus
  node-exporter-2:
    image: mariovicente/router-node-exporter:latest
    hostname: node-exporter-2
    container_name: node-exporter-2
    ports:
      - "9101:9100"
    depends_on:
      - prometheus
  node-exporter-3:
    image: mariovicente/router-node-exporter:latest
    hostname: node-exporter-3
    container_name: node-exporter-3
    ports:
      - "9102:9100"
  node-exporter-4:
    image: mariovicente/router-node-exporter:latest
    hostname: node-exporter-4
    container_name: node-exporter-4
    ports:
      - "9103:9100"
  prometheus:
    image: prom/prometheus
    hostname: prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus-config/prometheus.yml:/etc/prometheus/prometheus.yml
  prometheus-node-exporter-collector:
    build:
      context: ./docker/prometheus_node_exporter_collector
      dockerfile: Dockerfile
    image: prometheus-node-exporter-collector
    hostname: prometheus-node-exporter-collector
    container_name: prometheus-node-exporter-collector
    expose:
      - "8000"
    ports:
      - "8000:8000"
    depends_on:
      prometheus:
        condition: service_started
      node-exporter-1:
        condition: service_started
      node-exporter-2:
        condition: service_started
  kafka_metrics:
    build:
      context: ./docker/kafka_producer
      dockerfile: Dockerfile
    container_name: kafka_metrics
    volumes:
      - ./docker/kafka_producer/kafka_producer.py:/kafka_producer/kafka_producer.py
      - ./Kubernetes/config/config.json:/kafka_producer/config.json
    command: ["python3", "-u", "/kafka_producer/kafka_producer.py"]
    depends_on:
      kafka:
        condition: service_healthy
      prometheus-node-exporter-collector:
        condition: service_started
    environment:
      - COLLECTOR_EXPORTER_1=http://prometheus-node-exporter-collector:8000/metrics/node-exporter-1_9100.json
      - COLLECTOR_EXPORTER_2=http://prometheus-node-exporter-collector:8000/metrics/node-exporter-2_9100.json
      - COLLECTOR_EXPORTER_3=http://prometheus-node-exporter-collector:8000/metrics/node-exporter-3_9100.json
      - COLLECTOR_EXPORTER_4=http://prometheus-node-exporter-collector:8000/metrics/node-exporter-4_9100.json
      - KAFKA_TOPIC_1=TD_r1
      - KAFKA_TOPIC_2=TD_r2
      - KAFKA_TOPIC_3=TD_r3
      - KAFKA_TOPIC_4=TD_r4
  flink-jobmanager:
    image: flink:1.14.4-scala_2.12-java11
    hostname: flink-jobmanager
    container_name: flink-jobmanager
    ports:
      - "8084:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
  flink-taskmanager-1:
    image: flink:1.14.4-scala_2.12-java11
    hostname: flink-taskmanager-1
    container_name: flink-taskmanager-1
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 1
  flink-taskmanager-2:
    image: flink:1.14.4-scala_2.12-java11
    hostname: flink-taskmanager-2
    container_name: flink-taskmanager-2
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 1
    
